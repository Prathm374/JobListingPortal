{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\JobListingPortal\\\\AI app\\\\frontend\\\\src\\\\pages\\\\JobDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Layout from '../components/Layout';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetailsPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [job, setJob] = useState(null);\n  useEffect(() => {\n    // In a real application, this would be an API call\n    const fetchJob = async () => {\n      const mockJob = {\n        id: 1,\n        title: 'Software Engineer',\n        company: 'Tech Co',\n        location: 'San Francisco, CA',\n        description: 'We are looking for a talented software engineer to join our team. The ideal candidate will have experience with React, Node.js, and MongoDB. You will be working on cutting-edge projects and collaborating with a team of passionate developers.',\n        postedDate: '2023-05-15',\n        type: 'Full-time',\n        salary: '$100,000 - $150,000',\n        requirements: ['Bachelors degree in Computer Science or related field', '3+ years of experience with React and Node.js', 'Strong problem-solving skills', 'Excellent communication skills']\n      };\n      setJob(mockJob);\n    };\n    fetchJob();\n  }, [id]);\n  if (!job) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-8\",\n      children: /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-primary mb-2\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-gray-600 mb-2\",\n          children: job.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-500 mb-4\",\n          children: job.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block bg-blue-100 text-blue-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded\",\n            children: job.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block bg-green-100 text-green-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded\",\n            children: job.salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-primary mb-2\",\n          children: \"Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold text-primary mb-2\",\n          children: \"Requirements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside mb-4\",\n          children: job.requirements.map((req, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"text-gray-700\",\n            children: req\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mb-4\",\n          children: [\"Posted on: \", new Date(job.postedDate).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-full md:w-auto\",\n          children: \"Apply Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetailsPage, \"TYoKThqFYgaaJe3CDB6V8jdAIw0=\", false, function () {\n  return [useParams];\n});\n_c = JobDetailsPage;\nexport default JobDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"JobDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Layout","Card","Button","jsxDEV","_jsxDEV","JobDetailsPage","_s","id","job","setJob","fetchJob","mockJob","title","company","location","description","postedDate","type","salary","requirements","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Content","map","req","index","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/JobListingPortal/AI app/frontend/src/pages/JobDetailsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Layout from '../components/Layout';\r\nimport Card from '../components/ui/Card';\r\nimport Button from '../components/ui/Button';\r\n\r\nconst JobDetailsPage = () => {\r\n  const { id } = useParams();\r\n  const [job, setJob] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // In a real application, this would be an API call\r\n    const fetchJob = async () => {\r\n      const mockJob = {\r\n        id: 1,\r\n        title: 'Software Engineer',\r\n        company: 'Tech Co',\r\n        location: 'San Francisco, CA',\r\n        description: 'We are looking for a talented software engineer to join our team. The ideal candidate will have experience with React, Node.js, and MongoDB. You will be working on cutting-edge projects and collaborating with a team of passionate developers.',\r\n        postedDate: '2023-05-15',\r\n        type: 'Full-time',\r\n        salary: '$100,000 - $150,000',\r\n        requirements: [\r\n          'Bachelors degree in Computer Science or related field',\r\n          '3+ years of experience with React and Node.js',\r\n          'Strong problem-solving skills',\r\n          'Excellent communication skills',\r\n        ],\r\n      };\r\n      setJob(mockJob);\r\n    };\r\n    fetchJob();\r\n  }, [id]);\r\n\r\n  if (!job) {\r\n    return <Layout><div>Loading...</div></Layout>;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Card className=\"mb-8\">\r\n        <Card.Content>\r\n          <h1 className=\"text-3xl font-bold text-primary mb-2\">{job.title}</h1>\r\n          <p className=\"text-xl text-gray-600 mb-2\">{job.company}</p>\r\n          <p className=\"text-lg text-gray-500 mb-4\">{job.location}</p>\r\n          <div className=\"mb-4\">\r\n            <span className=\"inline-block bg-blue-100 text-blue-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded\">\r\n              {job.type}\r\n            </span>\r\n            <span className=\"inline-block bg-green-100 text-green-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded\">\r\n              {job.salary}\r\n            </span>\r\n          </div>\r\n          <h2 className=\"text-2xl font-semibold text-primary mb-2\">Job Description</h2>\r\n          <p className=\"text-gray-700 mb-4\">{job.description}</p>\r\n          <h2 className=\"text-2xl font-semibold text-primary mb-2\">Requirements</h2>\r\n          <ul className=\"list-disc list-inside mb-4\">\r\n            {job.requirements.map((req, index) => (\r\n              <li key={index} className=\"text-gray-700\">{req}</li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"text-sm text-gray-500 mb-4\">Posted on: {new Date(job.postedDate).toLocaleDateString()}</p>\r\n          <Button className=\"w-full md:w-auto\">Apply Now</Button>\r\n        </Card.Content>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default JobDetailsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}