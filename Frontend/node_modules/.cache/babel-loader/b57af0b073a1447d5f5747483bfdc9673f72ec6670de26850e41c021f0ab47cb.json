{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\JobListingPortal\\\\AI app\\\\frontend\\\\src\\\\pages\\\\JobsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Layout from '../components/Layout';\nimport JobCard from '../components/JobCard';\nimport Input from '../components/ui/Input';\nimport Select from '../components/ui/Select';\nimport Button from '../components/ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPage = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [locationFilter, setLocationFilter] = useState('');\n  const [jobTypeFilter, setJobTypeFilter] = useState('');\n  useEffect(() => {\n    // In a real application, this would be an API call\n    const fetchJobs = async () => {\n      const mockJobs = [{\n        id: 1,\n        title: 'Software Engineer',\n        company: 'Tech Co',\n        location: 'San Francisco, CA',\n        description: 'We are looking for a talented software engineer to join our team...',\n        postedDate: '2023-05-15',\n        type: 'Full-time'\n      }, {\n        id: 2,\n        title: 'Product Manager',\n        company: 'Startup Inc',\n        location: 'New York, NY',\n        description: 'Exciting opportunity for a product manager to lead our new initiative...',\n        postedDate: '2023-05-14',\n        type: 'Full-time'\n      }, {\n        id: 3,\n        title: 'UX Designer',\n        company: 'Design Studio',\n        location: 'Los Angeles, CA',\n        description: 'Join our creative team as a UX designer and help shape the future of our products...',\n        postedDate: '2023-05-13',\n        type: 'Contract'\n      }, {\n        id: 4,\n        title: 'Data Analyst',\n        company: 'Big Data Corp',\n        location: 'Chicago, IL',\n        description: 'We are seeking a data analyst to help us make sense of our growing datasets...',\n        postedDate: '2023-05-12',\n        type: 'Part-time'\n      }, {\n        id: 5,\n        title: 'Marketing Specialist',\n        company: 'Brand Builders',\n        location: 'Miami, FL',\n        description: 'Looking for a marketing specialist to drive our digital campaigns...',\n        postedDate: '2023-05-11',\n        type: 'Full-time'\n      }];\n      setJobs(mockJobs);\n      setFilteredJobs(mockJobs);\n    };\n    fetchJobs();\n  }, []);\n  const handleSearch = () => {\n    const filtered = jobs.filter(job => (job.title.toLowerCase().includes(searchTerm.toLowerCase()) || job.company.toLowerCase().includes(searchTerm.toLowerCase())) && (locationFilter === '' || job.location.includes(locationFilter)) && (jobTypeFilter === '' || job.type === jobTypeFilter));\n    setFilteredJobs(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-primary mb-6\",\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Search jobs...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Location\",\n          value: locationFilter,\n          onChange: e => setLocationFilter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: [{\n            value: '',\n            label: 'All Job Types'\n          }, {\n            value: 'Full-time',\n            label: 'Full-time'\n          }, {\n            value: 'Part-time',\n            label: 'Part-time'\n          }, {\n            value: 'Contract',\n            label: 'Contract'\n          }],\n          value: jobTypeFilter,\n          onChange: e => setJobTypeFilter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-6\",\n      children: filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(JobsPage, \"9E3e7jPiGkhko57tFFcDZNFkJtY=\");\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","useState","useEffect","Layout","JobCard","Input","Select","Button","jsxDEV","_jsxDEV","JobsPage","_s","jobs","setJobs","filteredJobs","setFilteredJobs","searchTerm","setSearchTerm","locationFilter","setLocationFilter","jobTypeFilter","setJobTypeFilter","fetchJobs","mockJobs","id","title","company","location","description","postedDate","type","handleSearch","filtered","filter","job","toLowerCase","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","options","label","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/JobListingPortal/AI app/frontend/src/pages/JobsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport JobCard from '../components/JobCard';\r\nimport Input from '../components/ui/Input';\r\nimport Select from '../components/ui/Select';\r\nimport Button from '../components/ui/Button';\r\n\r\nconst JobsPage = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [locationFilter, setLocationFilter] = useState('');\r\n  const [jobTypeFilter, setJobTypeFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    // In a real application, this would be an API call\r\n    const fetchJobs = async () => {\r\n      const mockJobs = [\r\n        { id: 1, title: 'Software Engineer', company: 'Tech Co', location: 'San Francisco, CA', description: 'We are looking for a talented software engineer to join our team...', postedDate: '2023-05-15', type: 'Full-time' },\r\n        { id: 2, title: 'Product Manager', company: 'Startup Inc', location: 'New York, NY', description: 'Exciting opportunity for a product manager to lead our new initiative...', postedDate: '2023-05-14', type: 'Full-time' },\r\n        { id: 3, title: 'UX Designer', company: 'Design Studio', location: 'Los Angeles, CA', description: 'Join our creative team as a UX designer and help shape the future of our products...', postedDate: '2023-05-13', type: 'Contract' },\r\n        { id: 4, title: 'Data Analyst', company: 'Big Data Corp', location: 'Chicago, IL', description: 'We are seeking a data analyst to help us make sense of our growing datasets...', postedDate: '2023-05-12', type: 'Part-time' },\r\n        { id: 5, title: 'Marketing Specialist', company: 'Brand Builders', location: 'Miami, FL', description: 'Looking for a marketing specialist to drive our digital campaigns...', postedDate: '2023-05-11', type: 'Full-time' },\r\n      ];\r\n      setJobs(mockJobs);\r\n      setFilteredJobs(mockJobs);\r\n    };\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleSearch = () => {\r\n    const filtered = jobs.filter(job => \r\n      (job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n       job.company.toLowerCase().includes(searchTerm.toLowerCase())) &&\r\n      (locationFilter === '' || job.location.includes(locationFilter)) &&\r\n      (jobTypeFilter === '' || job.type === jobTypeFilter)\r\n    );\r\n    setFilteredJobs(filtered);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-3xl font-bold text-primary mb-6\">Available Jobs</h1>\r\n      <div className=\"mb-8\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\r\n          <Input\r\n            placeholder=\"Search jobs...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <Input\r\n            placeholder=\"Location\"\r\n            value={locationFilter}\r\n            onChange={(e) => setLocationFilter(e.target.value)}\r\n          />\r\n          <Select\r\n            options={[\r\n              { value: '', label: 'All Job Types' },\r\n              { value: 'Full-time', label: 'Full-time' },\r\n              { value: 'Part-time', label: 'Part-time' },\r\n              { value: 'Contract', label: 'Contract' },\r\n            ]}\r\n            value={jobTypeFilter}\r\n            onChange={(e) => setJobTypeFilter(e.target.value)}\r\n          />\r\n          <Button onClick={handleSearch}>Search</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"grid gap-6\">\r\n        {filteredJobs.map((job) => (\r\n          <JobCard key={job.id} job={job} />\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default JobsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}